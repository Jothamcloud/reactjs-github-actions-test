# .github/workflows/cd.yml

name: CD

on:
  workflow_run:
    workflows: ["CI"]  # Name of the CI workflow
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}  # Only run if CI was successful
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      # Start the SSH agent and add the private key from GitHub Secrets
      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # SSH into the server and deploy the application
      - name: Deploy application on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.REMOTE_SERVER_IP }} << 'EOF'
            # Step 1: Navigate to the desired directory
            cd /var/www/myapp

            # Step 2: Download the latest build artifact from JFrog using the run ID from the CI
            curl -u${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_PASSWORD }} -O \
              "${{ secrets.JFROG_URL }}/artifactory/local/builds/react-app/build-${{ github.run_id }}/build.zip"
            
            # Step 3: Clean the current build directory
            rm -rf ./*

            # Step 4: Unzip the new build artifact
            unzip build-${{ github.run_id }}.zip -d .

            # Step 5: Configure Nginx to serve the React app
            sudo bash -c 'cat > /etc/nginx/sites-available/myapp << EOF
            server {
                listen 80;
                server_name 174.129.103.108;

                location / {
                    root /var/www/myapp/build;
                    try_files \$uri \$uri/ /index.html;
                }
            }
            EOF'

            # Step 6: Enable the new configuration
            sudo ln -s /etc/nginx/sites-available/myapp /etc/nginx/sites-enabled/

            # Step 7: Test the Nginx configuration
            sudo nginx -t

            # Step 8: Restart Nginx
            sudo systemctl restart nginx
          EOF
